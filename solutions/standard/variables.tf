########################################################################################################################
# Common variables
########################################################################################################################

variable "ibmcloud_api_key" {
  type        = string
  description = "The API Key to use for IBM Cloud."
  sensitive   = true
}

variable "use_existing_resource_group" {
  type        = bool
  description = "Whether to use an existing resource group."
  default     = false
}

variable "resource_group_name" {
  type        = string
  description = "The name of a new or an existing resource group in which to provision Secrets Manager resources to. If prefix input variable is passed then it will get prefixed infront of the value in the format of '<prefix>-value'. Optional if existing_secrets_manager_crn is not set."
  default     = null
}

variable "region" {
  type        = string
  description = "The region in which to provision Secrets Manager resources."
  default     = "us-south"
}

variable "prefix" {
  type        = string
  description = "(Optional) Prefix to append to all resources created by this solution."
  default     = null
}

########################################################################################################################
# Secrets Manager
########################################################################################################################

variable "secrets_manager_instance_name" {
  type        = string
  description = "The name to give the Secrets Manager instance that will be provisioned by this solution. If prefix input variable is passed then it will get prefixed infront of the value in the format of '<prefix>-value'"
  default     = "base-security-services-sm"
}

variable "existing_secrets_manager_crn" {
  type        = string
  description = "The CRN of an existing Secrets Manager instance. If not supplied, a new Secrets Manager instance will be created."
  default     = null
}

variable "existing_secrets_endpoint_type" {
  type        = string
  description = "The endpoint type to use if passing a value for `existing_secrets_manager_crn`."
  default     = "private"
  validation {
    condition     = contains(["public", "private"], var.existing_secrets_endpoint_type)
    error_message = "Allowed values for 'existing_secrets_endpoint_type' are \"public\" and \"private\"."
  }
}

variable "service_plan" {
  type        = string
  description = "The service/pricing plan to use when provisioning a new Secrets Manager instance. Allowed values: 'standard' and 'trial'. Only used if `provision_sm_instance` is set to true."
  default     = "standard"
  validation {
    condition     = contains(["standard", "trial"], var.service_plan)
    error_message = "Allowed values for sm_service_plan are \"standard\" and \"trial\"."
  }
}

variable "allowed_network" {
  type        = string
  description = "The types of service endpoints to set on the Secrets Manager instance. Possible values are `private-only` or `public-and-private`."
  default     = "private-only"
  validation {
    condition     = contains(["private-only", "public-and-private"], var.allowed_network)
    error_message = "The specified allowed_network is not a valid selection!"
  }
}

variable "secret_manager_tags" {
  type        = list(any)
  description = "The list of resource tags that you want to associate with your Secrets Manager instance."
  default     = []
}

variable "public_engine_enabled" {
  type        = bool
  description = "Set this to true to to configure an IBM Secrets Manager public certificate engine for an existing IBM Secrets Manager instance. If set to false, no public certificate engine will be configured for your secrets manager instance. For more details, see https://cloud.ibm.com/docs/secrets-manager?topic=secrets-manager-prepare-order-certificates."
  default     = false
}

# Public cert engine config
variable "public_engine_name" {
  type        = string
  description = "The name of the IAM Engine used to configure an IBM Secrets Manager public certificate engine for an existing IBM Secrets Manager instance."
  default     = "public-engine-sm"
}

variable "cis_id" {
  type        = string
  description = "Cloud Internet Service ID"
  default     = null
}

variable "dns_provider_name" {
  type        = string
  description = "Name of the DNS provider for the public_cert secrets engine"
  default     = "certificate-dns"
}

variable "ca_name" {
  type        = string
  description = "Secret Managers certificate authority name"
  default     = "cert-auth"
}

variable "acme_letsencrypt_private_key" {
  type        = string
  description = "The private key generated by the ACME account creation tool."
  sensitive   = true
  default     = null
}

# Private cert engine config
variable "private_engine_enabled" {
  type        = bool
  description = "Set this to true to to configure an IBM Secrets Manager private certificate engine for an existing IBM Secrets Manager instance. If set to false, no private certificate engine will be configured for your secrets manager instance. For more details, see https://cloud.ibm.com/docs/secrets-manager?topic=secrets-manager-prepare-create-certificates#:~:text=In%20Secrets%20Manager%2C%20the%20private,and%20manage%20in%20the%20service."
  default     = false
}

variable "private_engine_name" {
  type        = string
  description = "The name of the IAM Engine used to configure an IBM Secrets Manager private certificate engine for an existing IBM Secrets Manager instance."
  default     = "private-engine-sm"
}

variable "root_ca_name" {
  type        = string
  description = "Name of the Root CA to create for a private_cert secret engine"
  default     = "root-ca"
}

variable "root_ca_common_name" {
  type        = string
  description = "Fully qualified domain name or host domain name for the certificate to be created"
  default     = "terraform-modules.ibm.com"
}

variable "root_ca_max_ttl" {
  type        = string
  description = "Maximum TTL value for the root CA"
  default     = "87600h"
}

variable "intermediate_ca_name" {
  type        = string
  description = "A human-readable unique name to assign to the intermediate CA configuration."
  default     = "intermediate-ca"
}

variable "certificate_template_name" {
  type        = string
  description = "The name of the certificate template."
  default     = "default-cert-template"
}

variable "iam_engine_enabled" {
  type        = bool
  description = "Set this to true to to configure an IBM Secrets Manager IAM credentials engine. If set to false, no iam engine will be configured for your secrets manager instance. For more details, see https://cloud.ibm.com/docs/secrets-manager?topic=secrets-manager-configure-iam-engine."
  default     = false
}

variable "iam_engine_name" {
  type        = string
  description = "The name of the IAM Engine used to configure an IBM Secrets Manager IAM credentials engine. If prefix input variable is passed then it will get prefixed infront of the value in the format of '<prefix>-value'"
  default     = "base-sm-iam-engine"
}

########################################################################################################################
# Key Protect
########################################################################################################################

variable "skip_kms_iam_authorization_policy" {
  type        = bool
  description = "Set to true to skip the creation of an IAM authorization policy that permits all Secrets Manager instances in the resource group to read the encryption key from the KMS instance. If set to false, pass in a value for the KMS instance in the existing_kms_instance_crn variable."
  default     = false
}

variable "existing_secrets_manager_kms_key_crn" {
  type        = string
  description = "The CRN of an existing KMS key to use for Secrets Manager. If not supplied, a new key ring and key will be created."
  default     = null
}

########################################################################################################################
# KMS properties required when creating an encryption key, rather than passing an existing key CRN.
########################################################################################################################

variable "existing_kms_instance_crn" {
  type        = string
  default     = null
  description = "The CRN of the existed Hyper Protect Crypto Services or Key Protect instance. Only required if not supplying an existing KMS key to use for Secrets Manager."
}

variable "kms_endpoint_type" {
  type        = string
  description = "The type of endpoint to be used for communicating with the KMS instance. Allowed values are: 'public' or 'private' (default). Only required if not supplying an existing KMS root key CRN."
  default     = "private"
  validation {
    condition     = can(regex("public|private", var.kms_endpoint_type))
    error_message = "The kms_endpoint_type value must be 'public' or 'private'."
  }
}

variable "kms_key_ring_name" {
  type        = string
  default     = "sm-cos-key-ring"
  description = "The name to give to the new KMS key ring that will be used to store the KMS key to enable advanced, customer-managed encryption for your Secrets Manager secrets. Only required if not supplying an existing KMS root key CRN. If prefix input variable is passed then it will get prefixed infront of the value in the format of '<prefix>-value'"
}

variable "kms_key_name" {
  type        = string
  default     = "sm-cos-key"
  description = "The name to give to the new KMS root key that will be used to enable advanced, customer-managed encryption for your Secrets Manager secrets. Only required if not supplying an existing KMS root key CRN. If prefix input variable is passed then it will get prefixed infront of the value in the format of '<prefix>-value'"
}

########################################################################################################################
# Event Notifications
########################################################################################################################

variable "existing_event_notification_instance_crn" {
  type        = string
  description = "The CRN of the Event Notifications service to enable lifecycle notifications for your Secrets Manager instance."
  default     = null
}

variable "skip_event_notification_iam_authorization_policy" {
  type        = bool
  description = "Set to true to skip the creation of an IAM authorization policy that permits all Secrets Manager instances (scoped to the resource group) an 'Event Source Manager' role to the given Event Notifications instance passed in the `existing_event_notification_instance_crn` input variable."
  default     = false
}
